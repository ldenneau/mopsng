#====================================================================#
#                                                                    #
# Copyright 2008 Mikael Granvik, Jenni Virtanen, Karri Muinonen,     #
#                Teemu Laakso                                        #
#                                                                    #
# This file is part of OpenOrb.                                      #
#                                                                    #
# OpenOrb is free software: you can redistribute it and/or modify it #
# under the terms of the GNU General Public License as published by  #
# the Free Software Foundation, either version 3 of the License, or  #
# (at your option) any later version.                                #
#                                                                    #
# OpenOrb is distributed in the hope that it will be useful, but     #
# WITHOUT ANY WARRANTY; without even the implied warranty of         #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  #
# General Public License for more details.                           #
#                                                                    #
# You should have received a copy of the GNU General Public License  #
# along with OpenOrb. If not, see <http://www.gnu.org/licenses/>.    #
#                                                                    #
#====================================================================#
#
# Option file for OpenOrb executable 'oorb'
#
# The order in which the keywords are given can be arbitrary, 
# lines starting with "#" are ignored.
#
# Author:  MG
# Version: 2008-08-12


# GENERAL SETTINGS

# Verbose level for informative messages (0=nothing and 5=maximum, default=1)
verbose.info:   1

# Verbose level for error messages (0=nothing and 5=maximum, default=1)
verbose.error:   1


# INPUT

# Standard deviation of RA (in asec). If *.mpc[23] files (that may
# contain information on the observational noise) are the input data,
# this parameter may be commented out. Otherwise it will override any
# noise estimates included in the file.
#stdev.ra: 0.3

# Standard deviation of Dec (in asec). If *.mpc[23] files (that may
# contain information on the observational noise) are the input data,
# this parameter may be commented out. Otherwise it will override any
# noise estimates included in the file.
#stdev.dec: 0.3


# OUTPUT

# Element type to be used in the resulting orbital element file
# [ keplerian | cartesian ]  
element_type_out: cometary

# Comment in/out if automatic plot generation is wanted/not wanted. 
plot.results:

# Comment in/out if automatic plot is to be/not to be opened
# automatically for each object.
#plot.open:

# Format of output observation file
observation.format.out: mpc3


# GENERAL INVERSION PARAMETERS

# Orbital element type used during computations
# [ keplerian | cartesian ]  
element_type_comp:  cartesian

# Computation epoch TT (YYYY/MM/DD.DDDDD or JD or MJD) 
# If left unspecified and doing inversion, the midnight closest to 
# the observational mid-epoch will be used. 
#epoch.cal:  2008/07/6.0
#epoch.jd:      2453800.5
#epoch.mjd:       53800.0

# Toggle outlier rejection
#outlier_rejection:

# Outlier criterion (sigma multiplier)
outlier.multiplier: 3.0


# PROPAGATION PARAMETERS

# Dynamical model
# [ 2-body | n-body ]
dynamical_model:      n-body

# Perturbing bodies to be taken into account in n-body propagation
perturber.Mercury: T
perturber.Venus:   T
perturber.Earth:   T
perturber.Moon:    T
perturber.Mars:    T
perturber.Jupiter: T
perturber.Saturn:  T
perturber.Uranus:  T
perturber.Neptune: T
perturber.Pluto:   T

# Integrator (only used if dynamical model is different from
# 2-body).
# [ bulirsch-stoer ]
integrator: bulirsch-stoer

# Integrator step length (in days)
integration_step:      5.0

# Dynamical model of the initial orbit
# [ 2-body | n-body ]
dynamical_model_init:      n-body

# Integrator of the initial orbit (only used if dynamical model is
# different from 2-body).
# [ bulirsch-stoer ] 
integrator_init: bulirsch-stoer

# Integrator step length of the initial orbit (in days)
integration_step_init:       5.0


# STATISTICAL PARAMETERS

# Toggle use of a uniform p.d.f. (default off).
#uni.pdf:

# Toggle use of regularization (default off).
#reg.pdf:

# Read observation mask from observation file
#obs.mask:       T

# Sigma multiplier for acceptance windows
accwin.multiplier:      6.0


# BAYESIAN (INFORMATIVE) A PRIORI PARAMETERS

# Lower limit for semimajor axis in AU (default: r_Sun = 0.00465424 AU)
apriori.a.min : 0.00465424

# Upper limit for semimajor axis in AU
apriori.a.max : 1000.0

# Lower limit for perihelion distance in AU
#apriori.q.min : 0.00465424

# Upper limit for perihelion distance in AU
#apriori.q.max : 1.3 

# Lower limit for aphelion distance in AU
#apriori.Q.min : 

# Upper limit for aphelion distance in AU
#apriori.Q.max : 1.3 

# Lower limit for rho in AU (default: 10*r_Earth = 0.000425641 AU)
apriori.rho.min : 0.000425641 

# Upper limit for rho in AU (default: not defined)
#apriori.rho.max :


# STATISTICAL ORBITAL RANGING

# Method for solving the two-point boundary-value problem
# [ continued fraction | p-iteration | n-body amoeba ]
sor.two_point_method: continued fraction

# Type of ranging (1=basic, 2=automatic, 3=stepwise)
sor.type:           3

# Number of requested sample orbits
sor.norb:           5000

# Maximum number of trial orbits
sor.ntrial:         10000000

# Method for solving the two-point boundary-value problem during
# the preliminary steps of stepwise Ranging
# [ continued fraction | p-iteration | n-body amoeba ]
sor.two_point_method_sw: continued fraction

# Number of requested sample orbits for the preliminary steps of
# stepwise ranging 
sor.norb.sw:        500

# Maximum number of trial orbits for the preliminary steps of
# stepwise ranging
sor.ntrial.sw:      200000

# Maximum number of iterations in automatic/stepwise Ranging
sor.niter:          3

# Lower topocentric range bound corresponding to the first date 
# (observer -> target) [AU]
sor.rho11.init:     0.0

# Upper topocentric range bound corresponding to the first date 
# (observer -> target) [AU]
sor.rho12.init:     100.0

# Lower topocentric range bound of the second date relative to the 
# generated range of the first date [AU]
#sor.rho21.init:    -0.1

# Upper topocentric range bound of the second date relative to the 
# generated range of the first date [AU]
#sor.rho22.init:     0.1

# Sigma multiplier for generation windows
sor.genwin.multiplier:    6.0

# Offset for generation windows RA1, Dec1, RA2, Dec2 [asec]
sor.genwin.offset:    0.0 0.0 0.0 0.0

# Toggle use of random observation pair. Default is off, that is, use
# fixed pair (cronologically first and last).  
#sor.ran.obs:

# Bounds to be iterated in automatical versions 
# (rho1_lo, rho1_hi, rho2_lo, rho2_hi) 
sor.iterate_bounds: T T T T


# LEAST SQUARES

# Correction factor for the iterative solution of the least-squares
# problem [0:1]
ls.correction_factor:  1.0

# Maximum number of major iterations
ls.niter_major.max:  10

# Minimum number of major iterations
ls.niter_major.min:  2

# Number of iterations per scheme
ls.niter_minor:  10

# Elements to included in the correction process (indicated with
# T). Fixed elements should be marked with F.
ls.element_mask: T T T T T T

