#!/bin/bash
 
# Verification test for EIR 4.3.5.4 (HC SOT DB read access)
# Mikael Granvik  07/24/2008

USERNAME="granvik"
STUB="eir_4354_verification"
TMPDIR="/home/${USERNAME}/tmp"
INSTANCE_NAME="psmops_granvik_cr_test_SIM"
LIMIT=50
MYSQLHOST="mops00"
MYSQLUSER="mops"
MYSQLPASSWD="mops"

echo "1..1"

# Quick and dirty way of computing real readout speed and size of
# resulting table:
source $HOME/bin/mops_env $INSTANCE_NAME
lines=0
n=1
# Do the query until we stumble on a field_id with a statistically
# meaningful number of tracklets
while (( $lines < $LIMIT ))
  do
  echo \
"
select
  *
from 
  tracklets t
where
  t.field_id=$n
" | \
  time -p mysql -N -u$MYSQLUSER -p$MYSQLPASSWD -h$MYSQLHOST $INSTANCE_NAME \
  > $TMPDIR/eir_4.3.5.4_verification.tmp \
  2> $TMPDIR/eir_4.3.5.4_verification_timing.tmp
  lines=`grep -c '' $TMPDIR/eir_4.3.5.4_verification.tmp`
  n=$(($n+1))
done
tim=`cat $TMPDIR/eir_4.3.5.4_verification_timing.tmp`
tim=${tim/user*/}
tim=${tim#real}
echo $tim > $TMPDIR/eir_4.3.5.4_verification_timing.tmp
tim=`cat $TMPDIR/eir_4.3.5.4_verification_timing.tmp`

# Compute output time and convert to integer so that poor Bash
# understands what we want:
speed=`echo "$lines / $tim" | bc`
speed=${speed/.*/}
if [[ $1 == "--result" ]]
    then
    echo $speed
fi


# Check whether the all/s criterion is met:
if (( $speed > "1000" )) ; then
    echo "ok 1 - ${STUB}"
else
    echo "not ok 1 - ${STUB}"
fi

rm -f $TMPDIR/eir_4.3.5.4_verification.tmp \
  $TMPDIR/eir_4.3.5.4_verification_timing.tmp

exit
