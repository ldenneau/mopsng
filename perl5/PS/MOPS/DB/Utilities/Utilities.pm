# This file was automatically generated by SWIG
package PS::MOPS::DB::Utilities;
require Exporter;
require DynaLoader;
@ISA = qw(Exporter DynaLoader);
package PS::MOPS::DB::Utilitiesc;
bootstrap PS::MOPS::DB::Utilities;
package PS::MOPS::DB::Utilities;

%EXPORT_TAGS = ( 'all' => [ qw(
    modc_initialize
    modcv_versionNumber
    modcv_build
    modcv_server
    modcv_date
    modcv_release
    modcv_full
    modcv_id
) ] );
                                                                                                               
@EXPORT_OK = ( @{ $EXPORT_TAGS{'all'} } );
                                                                                                               

@EXPORT = qw( );

# ---------- BASE METHODS -------------

package PS::MOPS::DB::Utilities;

sub TIEHASH {
    my ($classname,$obj) = @_;
    return bless $obj, $classname;
}

sub CLEAR { }

sub FIRSTKEY { }

sub NEXTKEY { }

sub FETCH {
    my ($self,$field) = @_;
    my $member_func = "swig_${field}_get";
    $self->$member_func();
}

sub STORE {
    my ($self,$field,$newval) = @_;
    my $member_func = "swig_${field}_set";
    $self->$member_func($newval);
}

sub this {
    my $ptr = shift;
    return tied(%$ptr);
}


# ------- FUNCTION WRAPPERS --------

package PS::MOPS::DB::Utilities;

*modc_initialize = *PS::MOPS::DB::Utilitiesc::modc_initialize;
*modcv_versionNumber = *PS::MOPS::DB::Utilitiesc::modcv_versionNumber;
*modcv_build = *PS::MOPS::DB::Utilitiesc::modcv_build;
*modcv_server = *PS::MOPS::DB::Utilitiesc::modcv_server;
*modcv_date = *PS::MOPS::DB::Utilitiesc::modcv_date;
*modcv_release = *PS::MOPS::DB::Utilitiesc::modcv_release;
*modcv_full = *PS::MOPS::DB::Utilitiesc::modcv_full;
*modcv_id = *PS::MOPS::DB::Utilitiesc::modcv_id;
*modcv_description = *PS::MOPS::DB::Utilitiesc::modcv_description;

# ------- VARIABLE STUBS --------

package PS::MOPS::DB::Utilities;

*COV_MATRIX_SIZE = *PS::MOPS::DB::Utilitiesc::COV_MATRIX_SIZE;
*True = *PS::MOPS::DB::Utilitiesc::True;
*False = *PS::MOPS::DB::Utilitiesc::False;
*Success = *PS::MOPS::DB::Utilitiesc::Success;
*Fail = *PS::MOPS::DB::Utilitiesc::Fail;
1;
